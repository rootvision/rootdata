*** Normally used command in daily tasks
=========================================

*** To connect via sftp from the server
========================================
# sftp -oPort=8973 catherine@easychoicepropertymanagement.com
# sftp -oPort=8973 109.75.172.145

# cat /etc/wwwacct.conf  -->>   file contains the most basic setup instructions for cPanel & WHM

# cat /etc/localdomains | grep < abc > 		-->>  this will show the domain name relateding abc 

# /usr/local/cpanel/cpkeyclt	-->> to update the licnence key of cpanel or whm 

# netstat -tap  	-->>	Active Internet connections (servers and established)

# netstat -l		-->>  	Active Internet connections (only servers)

# mysqlcheck -r cphulkd	-->> to repair database tables
			     <databasetable>

# /scripts/cphulkdwhitelist	<IP address> 	-->> to white list the IP address from CPhulk 

# grep -lr "<word>" *		-->> to fine the particular word from a directory

# php -i | grep "Loaded Configuration File"		-->> to check php.ini file location on the server.

# netstat | grep http | wc -l		-->> to check the number of connection | through http 

# netstat -na			-->>  to display active connection to the server 

# netstat -an | grep :80 | sort		-->> to show active connection through port 80

# netstat -n -p | grep SYN_REC | sort -u	-->> To display the list of the all IP addresses involved instead of just count.

# netstat -tap  	-->>	Active Internet connections (servers and established)

# netstat -l		-->>  	Active Internet connections (only servers)

# cat /etc/localdomains | grep < abc > 		-->>  this will show the domain name relateding abc 

# /usr/local/cpanel/cpkeyclt	-->> to update the licnence key of cpanel or whm

# /scripts/cphulkdwhitelist	<IP address> 	-->> to white list the IP address from CPhulk 

# grep -lr "<word>" *		-->> to fine the pparticular word from a directory


#  /usr/sbin/csf -p     -->>   Listening ports of external connections

#  chkconfig --list	-->>   Running services

#  netstat -a		-->>  Network stataics 

#  /usr/sbin/csf -l 	-->>  Display IPtable rules 

#  systemctl status lfd.service		-->>  Check LFD status



*** To correct the files/directory permissions inside public_html directory
============================================================================

find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;


*** Chattr command
+===========+
# lsattr ---- to check list of currently locked directoires.
# chattr +ir <Directory/file>   ----- to chattr <Directory/file> directory/file
# chattr -ir <Directory/file>   ----- to remove chattr from <Directory/file> directory/file
+===========+

***  To check the logs of the files ( last, Modify and Access )
===============================================================

# stat /etc/my.cnf

Output
======
[root@server /]# stat /etc/Filename
File: `/etc/Filename'
Size: 357             Blocks: 8          IO Block: 4096   regular file
Device: fd00h/64768d    Inode: 135762      Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2017-06-11 05:17:01.829294038 +0530
Modify: 2017-05-26 05:15:40.023294038 +0530
Change: 2017-05-26 05:15:40.043294038 +0530
======


*** Cpanel & WHM Commands
=========================

***  To Locate the Spammer
==========================

You need to go in /var/spool/exim/input to fire the below commands
# cd /var/spool/exim/input
# egrep "X-PHP-Script" * -R
# ps -C exim -fH ewww
# ps -C exim -fH eww |grep home


*** Getting login error with the squrrel mail and roundcube
===========================================================
/etc/init.d/courier-imap
/etc/init.d/courier-authlib


*** To fix mail permission
==========================
/scripts/mailperm -verbose <Username>

rsync Command
==============
( rsync -avz --rsh='ssh -p3233' root@64.34.109.63:/backup/cpbackup/daily/* . ) ---this is wil copy entire backup files from the daily directory to destination folder which we have created on the receiver server.
rsync --progress -avz  -e "ssh -p 61609" root@server.hostname.com:<Source> <Destination>

***  Command example with explantation
======================================
# rsync --progress -avz  -e "ssh -p 61609" root@linux36.domainnameservers.net:/backup/tar-gz/cpbackup/daily/ .

***  Run from destination server
================================
# rsync --progress -avz  -e "ssh -p 49125" root@109.75.174.125:/home/chinatec/mail/autoblaze.co.uk/* .
# rsync --progress -avz  -e "ssh -p 49125" root@109.75.174.125:/home/chinatec/mail/autoblaze.co.uk/* /home/chinatec/mail/autoblaze.co.uk/

*** Run from source server
==========================
# rsync -vrplogDtH -e "ssh -p 49125" root@109.75.174.125:/home/chinatec/mail/autoblaze.co.uk/* /home/chinatec/mail/autoblaze.co.uk/


***  -->>   https://www.tecmint.com/linux-iptables-firewall-rules-examples-commands/

***  To Block IP Address in IPtables Firewall
=============================================
# iptables -A INPUT -s 89.248.174.101 -j DROP
# iptables -A INPUT -s IP-ADDRESS -j DROP


***  To allow the IP Address in IPtables Firewall
=================================================
# iptables -I INPUT -p tcp -s 95.49.15.152 -j ACCEPT


*** Unblock IP Address in IPtables Firewall
===========================================
# iptables -D INPUT -s xxx.xxx.xxx.xxx -j DROP


***  Block Specific Port on IPtables Firewall
============================================
# iptables -A OUTPUT -p tcp --dport xxx -j DROP

*** To allow incoming connections use
======================================
# iptables -A INPUT -p tcp --dport xxx -j ACCEPT

*** Allow Multiple Ports on IPtables using Multiport
======================================================
# iptables -A INPUT -p tcp -m multiport --dports 22,80,443 -j ACCEPT
# iptables -A OUTPUT -p tcp -m multiport --sports 22,80,443 -j ACCEPT

*** Allow Specific Network Range on Particular Port on IPtables
================================================================
# iptables -A OUTPUT -p tcp -d 192.168.100.0/24 --dport 22 -j ACCEPT


*** How To Verify The Service SSL On The cPanel Server Using The Command Line Interface
======================================================================

*** If you wish to verify the Service SSL On The cPanel Server Using the Command Line Interface , Use The Following Commands

*** For cPanel :: 
============

openssl s_client -showcerts -verify 32 -connect server.hostname.net:2083
openssl s_client -showcerts -verify 32 -connect 192.168.1.1:2083

*** For WHM :: 
============
openssl s_client -showcerts -verify 32 -connect server.hostname.net:2087
openssl s_client -showcerts -verify 32 -connect 192.168.1.1:2087

######  Where 192.168.1.1 Is The Server IP While server.hostname.net Is the server HostName   ######

*** Check SSL Certificate Expiration Date
================================
# echo | openssl s_client -servername applehomeimprovements.com -connect applehomeimprovements.com:443 2>/dev/null | openssl x509 -noout -dates


*** To remove unwanted Inodes from the cPanel server
==========================================

# /usr/local/cpanel/bin/purge_dead_comet_files

*** To count the INODE
======================
# echo "Detailed Inode usage for: $(pwd)" ; for d in `find -maxdepth 1 -type d |cut -d\/ -f2 |grep -xv . |sort`; do c=$(find $d |wc -l) ; printf "$c\t\t- $d\n" ; done ; printf "Total: \t\t$(find $(pwd) | wc -l)\n"

*** WHM login link(One-time)
=============================
# whmapi1 create_user_session user=root service=whostmgrd

*** To check status of account of sepecific user
================================================
# whmapi1 listaccts search=(username) searchtype=user

*** To check status of account of sepecific user
===================================
# whmapi1 listaccts search=(username) searchtype=user
# whmapi1 listaccts search=Username searchtype=user | grep -e "domain" -e "email" -e "user" -e "plan" -e "disklimit" -e "diskused" -e "theme"

*** This function modifies a user's disk quota
==================================
# whmapi1 editquota user=user quota=500

*** This function lists suspended accounts on the server
==========================================
# whmapi1 listsuspended 

*** This function returns a list of the currently-installed EasyApache 4 packages
=============================================================
# whmapi1 ea4_get_currently_installed_packages


*** To check last backup run on the server by r1soft
==========================================
# hcp -l

***  To check pear list on the server
=============================
#  /opt/cpanel/ea-php56/root/usr/bin/pear list

***  To restore the PG via shell
========================
#  psql -U username -d database_name -f objects.sql
# psql -d gb97tst_cnburtest1 -U gb97tst_testsupport < gb97tst-dump.sql

***  MySQL Dump/Restore Stored Procedures and Triggers
=============================================
# mysqldump Database --routines > Database.sql

***  To replace the Word under the whole File
=============================================
#  sed -i -e "s/OldWord/NewWord/g" <FileName>


*** To list the Exim rules set(limits)
======================================
# exim -bP | grep message_size_limit

*** To check the usage of particular directory
==============================================
# du --max-depth=1 | sort -n | awk 'BEGIN {OFMT = "%.0f"} {print $1/1024,"MB", $2}'

*** finding files that are 500000k or larger
============================================
# find /home -type f -size +500000k -exec ls -lh {} \; | awk '{ print $9 ": " $5 }'


***  To check the number of IP address connection to the domain
===============================================================

# cat example.com | awk '{print $1}' | sort | uniq -c | sort -n

# cat rensrescue.org | egrep -o '"(GET|POST)' | cut -b2- | sort | uniq -c
236 GET
1657 POST

# cat rensrescue.org | cut -d\" -f3 | cut -d\ -f2 | sort | uniq -c
1771 200
22 301
20 302
80 404


***  To check the services status on the server(systemctl)
==========================================================
https://www.cyberciti.biz/faq/check-running-services-in-rhel-redhat-fedora-centoslinux/

# systemctl
# systemctl | more
# systemctl | grep httpd
# systemctl list-units --type service
# systemctl list-units --type mount

***  To list all services:
==========================
# systemctl list-unit-files


***  service command – list running services
============================================
# service --status-all
# service --status-all | more
# service --status-all | grep ntpd
# service --status-all | less


*** To generate the DKIM key for the user (DKIM, SPF)
==========================================
# /usr/local/cpanel/bin/dkim_keys_install <Username>
# /usr/local/cpanel/bin/spf_installer <Username>



*** To check the hard disk type on the server( HDD Or SSD)
==============
# cat /sys/block/--**--/queue/rotational
1
==============
1 means you have a HDD
0 means you have a SSD
==============


*** To remove unwanted Inodes from the cPanel server
==========================================

# /usr/local/cpanel/bin/purge_dead_comet_files


*** Command to firewall-cmd (firewall D)
===============================
# firewall-cmd --zone=public --permanent --add-port=2195/tcp

# firewall-cmd --zone=public --permanent --list-ports

# firewall-cmd --permanent --add-port=8080/tcp

# firewall-cmd --reload

# firewall-cmd --list-all

*** To check open ports on the remote server
==================================
# nc -zv server.workstation.com 25
# nc -zv 151.236.51.42 20-25

*** Un-tar a specific directory inside of a tar
=================================
# tar -zxvf httpdocs.tar.gz --strip 1 httpdocs/wp-content/themes/gurdwara

*** SpamAssassin
================
# rpm -qa | grep SpamAssassin
# rpm -e -nodeps cpanel-perl-514-Mail-ApamAssassin
# /scripts/check_cpanel_rpms

*** To check the current status of Exim
==================================
# exiwhat
... shows active connections being handled
# ps -C exim wwwu
... shows a list of all running exim processes
# lsof -c exim
... shows a list of files being accessed by exim

# openssl s_client -connect 151.236.51.42:587
... Manuallt testing IMAP/POP with Openssl


*** To check the spamming directory sending huge mail
================================================
# grep cwd=/ exim_mainlog | cut -d = -f 2 | cut -d " " -f 1 | sort | uniq -c | sort -n

*** To check the mail send from the particular user
========================================
# exiqgrep -f sender@example.com

*** To check mail received from the particular recipient
=========================================
# exiqgrep -r recipients@example.com

*** To remove the mails of particular user
======================================
# exiqgrep -f test@example.com -i | xargs exim -Mrm

nslookup
host
dig

*** To check if private IP address is mapped into the cPanel server.
# cat /var/cpanel/cpnat

# named-checkconf /etc/named.conf
# named-checkzone example.com /var/named/examplecom.db

# /scripts/restartsrv_named --check
# /scripts/restartsrv_named --status
# /scripts/restartsrv_named --stop
# /scripts/restartsrv_named --start

*** To check the number of zone on the server.
# ls -arilh /var/named |wc -l

*** To replace the word
======================
# sed -i s/2015121703/2015121704/ ham.ninja.db

*** To delete the line number
===========================
sed -i '141,144d' /etc/named.conf

*** MySQL Grabage
===================

*** To read JSON file
==================
# cat file.json | python -mjson.tool

*** To check if any of the user is using its my.cnf configuration file On cPanel server
=============================
# /usr/local/cpanel/scripts/check_users_my_cnf

mysql > show variables like"%char%";
mysql > show variables like "%myisam%";
mysql > show databases like "username_%";
mysql > select last_name from employees limit 5;
mysql> select last_name from employees where last_name "A%" limit 5;
mysql> update fish_name set name='catfish' where id=0;
mysql> insert into fish_name set id=3 name="coy";
mysql> delete from fish_name where name="catfish";

*** Fixing a broken root user
=======================
# /usr/local/cpanel/scripts/restartsrv_mysql --stop
# mysqld_safe --skip-grant-tables --skip-networking &
mysql> mysql
mysql> use mysql;
mysql> select * from user where User="root";
# /usr/local/cpanel/scripts/restartsrv_mysql

*** Tool to check Mysql process threads
=================================
# yum install mytop
# vi /root/.mytop
(add the line)
db=mysql
:wq!

*** To check mail receiving to localhost
=========================================
# cat /etc/localaliases
# cat /var/cpanel/userhomes/cpanel/.forward
# cat /root/.forward
# grep email@domain.com /etc/valiases/*
# grep email@domain.com /etc/vfilters/*
--------------------------------------------------------------------------------------------------------------
Part of the issue is that /etc/localaliases isn't set to server@example.com for cpanel, nobody and root. You can change that either directly in /etc/localaliases by setting it to show this instead:
cpanel: server@example.com
nobody: server@example.com
root: server@example.com
Or, it could be changed in WHM > Change System Mail Preferences area.
Next, /var/cpanel/userhomes/cpanel/.forward file would need to be set to that email account as well:
server@example.com
When it is set as root, then root@localhost should translate to root@hostname because localhost is normally routed to the server's hostname. If the above steps are not fixing the issue, please open up a ticket at that point for us to further investigate.
Also, if you could provide the output for these commands as I'd like to see the /etc/hosts entry for localhost as well as any possible mail_reverse_dns entries:
--------------------------------------------------------------------------------------------------------------
# cat /etc/hosts
# cat /etc/mail_reverse_dns


***  Curl Commands
https://www.rosehosting.com/blog/curl-command-examples/

*** To check Webserver
======================
# curl -I -L http://kaitness.net		-->> to check on what the domain is working (litespeed,apache,nija)

*** Get details of website connect time with the server
============================================
# curl -s -w '\nLookup time:\t%{time_namelookup}\nConnect time:\t%{time_connect}\nPreXfer time:\t%{time_pretransfer}\nStartXfer time:\t%{time_starttransfer}\n\nTotal time:\t%{time_total}\n' -o /dev/null http://highlandtrails.com/

*** Save the output of the URL to a file
===============================
# curl -o website http://highlandtrails.com/

*** Download files with cURL
=======================
# curl -O https://domain.com/file.zip

*** You can also download the file with a different name by adding the -o option to cURL
=======================================================================
# curl -o archive.zip https://domain.com/file.zip

*** cURL can be also used to download multiple files simultaneously
========================================================
# curl -O https://domain.com/file.zip -O https://domain.com/file2.zip

*** cURL can be also used to download files securely via SSH using the following command
===========================================================================
# curl -u user sftp://server.domain.com/path/to/file

*** Access an FTP server
*** To access your FTP server with cURL use the following command
========================================================
# curl ftp://ftp.domain.com --user username:password

*** download a file via FTP
=====================
# curl ftp://ftp.domain.com/file.zip --user username:password

*** upload a file ot the FTP server
===========================
# curl -T file.zip ftp://ftp.domain.com/ --user username:password






***

***  [NOTE: Remember all commands are lower-case]
=================================================


***  In this case
=================


cp = command -iv = options file = source

/var/tmp = destination




***  Linux Basic Commands
=========================

# clear  		-->>    clear the terminal

# reset         	-->>    To reset  the terminal

# pwd		-->> 	To show current working directory

# logname		-->>	To show login user name

# history		-->>	To show command history

# history -c	-->> 	To clear


***  command history
====================

# history -r  	-->>	To recover command history

# history -w	-->>	To write (save) command history

# history -a	-->>	To update the history file (.bash_history) 

# init		-->>	To change runlevel

# telinit		-->>	To change runlevel

# reboot		-->>	Restart the system

# poweroff	-->>	Shutdown the system

# info		-->>	To show command information

# man		-->>	To show command information

# pinfo		-->>	To show command information

# date		-->>	To show and to set date & time

# hwclock		-->> 	To show hardware date & time

# cal		-->>	To show calendar

# tzselect	-->>	To set time zone

# bc		-->>	Basic calculator

# ln		-->>	To create linking

# unlink		-->>	To remove the link

# mkdir		-->>	To create a directory

# touch		-->>	To create empty file

# ls		-->>	List directory contents

# lsof		-->>	list open file

# cp		-->>	copy files

# mv		-->>	move (cut) files

# cat		-->>	To read a file

# tac		-->>	To read a file reverse

# nl		-->>	number lines of files

# rm		-->>	Remove files or directories

# tty		-->>	 To show terminal type

# chvt		-->>	To change the virtual terminal

# rmdir		-->>	Remove empty directories




***   Linux Administrative Commands
===================================



# mail		-->>	Send and receive mail

# grep		-->> 	print lines matching a pattern

# updatedb	-->>	Updates a database used by locate

# locate		-->>	Find files by name

# find		-->>	Search for files in a directory hierarchy

# free		-->>	To show memory size and swap partition size

# lsmod		-->>	Show the status of modules in the Linux Kernel

# modinfo		-->>	To show information about a Linux Kernel module

# modprobe	-->> 	To add and remove modules from the Linux Kernel

# dmidecode	-->>	To show hardware components

# uptime		-->>	To show system uptime and system load

# pinky		-->>	Print user login information

# finger		-->>	Displays information about the system users

# chfn		-->>	To change the finger information

# uname		-->>	To display system information

# ps		-->>	To show process status

# top		-->>	Display Linux tasks

# pidof		-->>	Find the process ID of a running program.

# kill		-->>	Terminate a process

# pkill		-->>	Terminate a process by process name

# w		-->>	Show who is logged on and what they are doing

# last		-->>	To show last logged in users

# lastb		-->>	To show fail attempt users

# lastlog		-->>	Reports the most recent login

# du		-->>	Summarize disk usage of each FILE

# df		-->>	Report file system disk space usage

# sort		-->>	Sort lines of text files

# head		-->>	Print the first 10 lines of each FILE

# tail		-->>	Print the last 10 lines of each FILE

# wall		-->>	Send a message to everybody terminal

# chmod		-->>	To change file permission

# chown		-->>	To change file owner and group

# chgrp		-->>	To change group ownership

# getfacl		-->> 	Get file access control list

# setfacl		-->>	Set file access control list

# wc		-->>	Print newline, word, and byte counts for each file

# useradd		-->>	To create a new user

# userdel		-->>	To delete a user

# usermod		-->>	To modify a user account

# groupadd	-->>	To create a new group

# groupdel	-->>	To delete a group

# groupmod	-->>	To modify a group account

# su		-->>	Switch user password

# passwd		-->>	To set user 

# chage		-->>	Change user password expiry information

# who		-->>	Show who is logged on

# lsusb	 	-->>	To show list USB port

# lscpu		-->>	To show CPU information

# nice		-->>	Run a program with modified scheduling priority

# renice		-->>	To change priority of running processes

# ifconfig	-->>	To show system IP address

# ss		-->> 	ss is used to dump socket statistics

# netstat		-->>	Print network connections, interface statistics

# ping		-->>	To check machine connectivity

# nmap		-->>	Port Scanner (Network Mapper)

# wireshark	-->>	Analyze network traffic

# hostname	-->>	To show or to set machine name

# domainname	-->>	To show domain name OR to set domain name

# tar		-->>	To archive files

# zip		-->>	To compress files

# scp		-->>	Secure copy (remote file copy)

# rsync		-->>	Remote file copy

# sftp		-->>	Secure file transfer program

# rpm		-->>	RPM Package Manager

# yum		-->>	Yellow-dog Updater Modified

# crontab		-->> 	Executes commands at a specified time.

# getenforce	-->>	Get the current mode of SE-Linux

# setenforce	-->>	Modify the mode SE-Linux is running in.

# sestatus	-->>	SE-Linux status tool

# restorecon	-->>	Restore file(s) default SE-Linux security contexts.

# fixfiles	-->>	Fix file SE-Linux security contexts

# chcon		-->>	Change file SE-Linux security context

# getsebool	-->>	Get SE-Linux Boolean value

# setsebool	-->> 	Set SE-Linux Boolean value

# partx		-->>	To update the partition table

# blkid		-->>	To print block device attributes

# badblocks	-->>	Search a device for bad blocks

# mkfs		-->>	To format the Linux partition

# e2lable		-->>	To set and Change the label

# swapon		-->>	To enable swap partition

# swapoff		-->>	To disable swap partition

# mkswap		-->>	To format swap partition

# pvcreate	-->>	To create physical volume

# pvdisplay	-->>	To show physical volume status

# pvremove	-->>	To remove physical volume

# vgcreate	-->>	To create volume group

# vgdisplay	-->>	To show volume group status

# vgremove	-->>	To remove volume group

# lvcreate	-->>	To create logical volume

# lvdisplay	-->>	To show logical volume status

# lvremove	-->>	To remove logical volume

# smbstatus	-->>	The smbstatus tool provides access to information about the current connections to smbd

# testparm	-->> The testparm utility is a simple syntax checker for SambaÂ ´s smb.conf configuration file.



%%%%%%%%%%%   System Shutdown,Restart & Log out   %%%%%%%%%%%%%


# init 0          -->>             [shutdown the system]


# init 6          -->>             [reboot the system]


# reboot          -->>             [restart the system]


# shutdown -r now   -->>           [restart]


# reboot -f        -->>            [force restart]


# shutdown -h now    -->>          [shutdown now]


# shutdown -h/r minutes    -->>    [planned shutdown of the system]


# shutdown -c         -->>         [cancel a planned shutdown of the system]


# logout         -->>              [logout user] 


# ctrl+D         -->>              [CLI logout user]


# ctrl+alt+backspace      -->>     [GUI logout user]


%%%%%%%%%%%%%% 	  Get the help command   %%%%%%%%%%%%%%



***   Rename & Move file
========================


# mv <soure><destination>  	-->>      [move file or dir]

# mv <oldname><newname>         -->>	  [rename file or dir]




*** Create Directory
====================


# mkdir <dirname>               -->>	  [create dirs]

# mkdir -v data1                -->>      [verbose mode show]

# mkdir -p /data/data1/data2    -->>      [parent directory create]

# mkdir -m 764 data             -->>      [mode/ to set permission]



***  Directory List
===================

# ls        	-->>		[listing]

# ls -l    	-->>		[long list]

# ls -r     	-->>		[reverse listing]

# ls -a         -->>		[all]

# ls -i   	-->>		[inode no show]

# ls -F    	-->>		[classify dirs and files]

# ls -sh    	-->>		[to show human readable size]

# ls -n    	-->>		[Numeric UID/GID]

# ls -t     	-->>		[sort by modification time]

# ls -ld <directoryname>      -->>	[only show this dir list]

# ls -l <filename>       -->>		[only show this file list]

# ls -l | grep ^d   	 -->>		[only dir show]

# ls -l | grep ^-   	 -->>		[only Regular file show]

# ls -l | grep ^l    	 -->>		[only link file show]

# lsof      	-->>		[List open files]

# tree /root    -->>		[show files and directory in a tree]



***  Change Directory
=====================


# cd        	-->>		[change directory]
  
# cd /home  	-->>		[go to home dir]

# cd /     	-->>		[go to /]

# cd ~user  	-->>		[user home directory]

# cd ~      	-->>		[go to home directory]

# cd ..     	-->>		[go to one level back]

# cd ../..  	-->>		[go to two level back]

# cd -      	-->>		[go to privise directory]



***	To read a file
======================


# cat <exitingfilename>      -->>	 [to read file]

# cat ><newfilename>         -->>	 [overwrite file]

# cat >><exitingfilename>    -->>	 [append file]

# tac <filename>             -->>	 [file read in reverse]




*** 	To remove files and directory
=====================================


# rm <filename>           -->>		[remove file and directory]

# rm -rf <diretory name>  -->>		[recursive / force]
 
# rm -v <filename>        -->>		[verbose mode]

# rmdir  <emptydirname>   -->>		[Remove empty folder(s)]




***	Hard Link and Soft Link
===============================


## Different between Soft links and hard link..?

-->>	Hard Link is a mirror copy of the original file. Hard links share the same
inode. Any changes made to the original or hard linked file will reflect the
other. Even if you delete any one of the files, nothing will happen to the
other.


-->>	Soft Link is a symbolic link to the original file. Soft Links will have a
different Inode value.A soft link points to the original file. If you delete
the original file, the soft link fails.


***	If you delete the soft link, nothing will happen
========================================================

# ln -s <target><linkname>      -->>	[to create soft link]

# ls -il                        -->>	[to show inode No]

# ln <target><linkname>         -->>	[to create hard link]

# ls -il                        -->>	[to show inode No]

# unlink softlink               -->>	[for soft link delete link file]




###### 	Text Mode Editor nano,vi,vim	 ######
===============================================


***	nano, Vi  and Vim Text Editor.......
=============================================


# nano <new/exiting file name>    -->>	   [to create / editing file]

# vi  <file_name>                 -->>	   [to create / editing file]

# vim <file_name>                 -->>	   [to create / editing file]



***	VIM = the vim utility is a powerful command-line based text editor which is
more complex and powerful than other editor.In fact it's an implementation of the vi utility.


*** There are three mode of vi and vim editor
=============================================

1. Command Mode OR Default Mode		-->>	(This mode to use for file read, cut,copy, paste and delete)
2. Insert Mode				-->>	(This mode used to normal text editing and text modified)
3. Ex Mode				-->>	(This mode used to save,exit,search and replace)


**** Use the vi and vim editor *****
====================================

# vim <new filename>

# vim  filename 
 
press i, a, insert key          (Go Command mode to  Insert mode)

This is text file only          (add the content)

press Esc to return to command mode 

Press Shift :                   (Go command mode to Ex mode)

:wq!       (w= save, q= quit and ! = forcefully)



===========================================================================
-------------------- Advance Options in vi/vim editors --------------------
===========================================================================
1.   yy  = to copy line

2.   2yy = 2 line copy

3.   yw  = to copy word

4.   2yw = 2 word copy

5.   p   = to paste

6.   cc  = cut line

7.   cw  = cut word

8.   2cw = 2 cut word

9.   dd  = to delete line

10.  dw  = delete word

11.  2dw = 2 delete word

12.  u   = to undo

13.  x   = to delete the character under the cursor

14.  2x  = to character delete

15.  q   = quit file

16.  w   = save file

17. :set nu = to show line numbers

18. :wq   = save & quit file

19. :wq!  = forcefully save & quit

20. :No   = go to line no.

21. :help = to help

22. :!ls  = command execute

23. :/example = to search

24. :%s/example/nasa  = to search and replace the words


**********************************************************************


***	{NOTE:- The 'vimtutor 'command included with vim runs a tutorial that can help
	you learn more about vim outside this class.}
======================================================================================


***	Compress files
======================


# zip file.zip file            -->>	  (Compress file/dir)

# uzip file.zip                -->>	  (Decompress file)

# zcat file.zip                -->>	  (Read zip file)

# zip nasa.zip file file1 file2  -->>	  (Multiple file Compress)

# zip -e file.zip file         -->>	  (Encrypt with Password)

( NOTE: - bzip2 is usually better compression agent than gzip )
 

***	Backup and restore	***
===================================



*** tar command
===============

c= create  
             
x= extract
             
t= listing
                   
v= verbose 
           
f= file name 
          
z= gzip 
                
j= bzip
  

                 
***	file folder Backup and Restore
======================================

# tar -cf archive.tar file file1        -->>	  [archive file and file1]

# tar -xf archive                       -->>	  [extract]

# tar -tvf archive.tar      		-->>	  [List all files in archive.tar verbosely]

# tar  -cvjf /var/tmp/etc.tar.gz /etc/  -->>	  [to create backup]




***	Partition Backup and restore
====================================

# xfsdump -f boot.dump /dev/sda1 	-->>	[file-system backup/partition backup]

# xfsrestore -f boot.dump               -->>	[restore backup] 
                
# grep   	-->>	 Print lines matching a pattern

# more   	-->>	 To Show file in paging view

# less   	-->>	 To Show file in paging view

# mail   	-->>	 To Send and Receive Internet mail

# lpr    	-->>	 To Print files

# locate 	-->>	 find files by name

# find   	-->>	 search for files in a directory

# grep 'root' /etc/passwd        -->>        (To show root line)

# grep -i 'ROOT' /etc/passwd     -->>        (To Ignore  case )

# grep -v root /etc/passwd 	 -->>	     (select non-matching lines/invert-match)

# grep -m 1 root /etc/passwd     -->>	     (to show 1 output only)

# grep -n root /etc/passwd       -->>	     (to show line number)

# more /etc/passwd        	 -->>	     (To show paging) (|(Pipe symbol) to used two command run)

# less /etc/passwd          	 -->>        (To show file in paging)

  
***	Mail send
=================


# mail <user name> 	-->>	(To send mail to user)

# mail           	-->>	(To check mailbox)

# mail -s "hi root" root   -->>		(Subject add)

# mail -a install.log root  	-->>	(attach file)

# mail -c student root     -->>	        (Send carbon copies)

# mail -c student,alex,harry    -->>	(multiple carbon copies)

# mail root,student             -->>	(to send multiple users)

	[w = save attach file, q = quit]

***	[NOTE:-Mail stored in /var/spool/mail/root]	***

 
# lpr <file name>            -->>            (Print the file)
            
# lpq                        -->>            (Show printer queue status)

# lprm <job No>              -->>            (Cancel print jobs)



***	Locate and find Command 
===============================

# updatedb                  -->>	(to update file database)

# locate passwd             -->>	(To search file or directory)

# locate -n 10 passwd       -->>	(to show only 10 output)

# locate -n 10 *.html       -->>	(to search all html files)

# locate -i Passwd          -->>	(to ignore case)


# find <search location><options><filename>

# find /etc -name passwd    -->>	(To search by name)

# find /etc -size  1M       -->>	(To search by size)

# find /etc -perm  000      -->>        (To search by permission)

# find /home  -user <USERNAME>   -->>	(To search by user created file)

# find /home  -group <GROUPNAME> -->>   (To search by group created file)

# find / -name *.html -user alex  -->>  (to show alex user html file)

# find /root -name '*.txt'   -->>       (to show all txt files)

# find /proc -amin 2         -->>       (File was last accessed 2 minutes ago)

# find / -atime 1            -->>       (File was last accessed 1 hours ago)

# find / -mmin 1             -->>       (Files status was last changed 1 minutes ago)

# find / -mtime 1            -->>       (Files status was last changed 1 hours ago)  



I/O Redirection
===============
*There are three type of Redirection:-
======================================


1. Standard Input       -->>	 (STDIN) usually from the keyboard (value 0)

2. Standard Output      -->>	 (STDOUT) usually from the terminal (value 1)

3. Standard Error       -->>	 (STDERR) usually from the terminal (value 2) 

STDOUT = >                (symbol)

STDIN =<(--#--)

STDERR = 2>               (--#--)


***	Advance Command
=======================


# ps aux            -->>	(To show running processes)

# top               -->>	(To show update run processes)

# pidstat           -->>	(reports statistics based on the process id (PID)
  
# pidof firefox     -->>	(To show PID NO)

# kill <pid no>     -->>	(To kill processes)

# kill -9 <PID No>  -->>	(9 forcefully kill)

# pkill top         -->>	(Stop processes by name)

# w                 -->>	(To show remote login user and longing user)
 
# logname           -->>	(Print current login name)

# groups alex       -->>	(print the groups a user is in)

# du /etc           -->>	(to show file/dir. usage space (in bytes)

# du -sh /etc       -->>	(to show etc dir. Size)	(-k kilobyte -m megabyte, s= show only a total each file/directory)

# df /              -->>	(report file system disk space usage)

# tr "a-z" "A-Z" < file     -->>	(Translate)(Lowercase to uppercase)

# head /etc/passwd          -->>	(show 1st 10 line)

# head -n 5 /etc/passwd     -->>	(show 1st 5 line)

# tail /etc/passwd          -->>	(To show last 10 line)

# tail -n 5 /etc/passwd     -->>	(to show last 5 line)

# cut -c1  <file name>      -->>	(to show or cut column of the file)
       
# wc <file name>      	    -->>	(words, bytes counts for each file)

# sort <file name> 	    -->>	(Ascending)

# sort -r <file name>       -->>        (Descending)

# sort -n <file name> 	    -->>	(Numeric sort)

# sort -u <file name> 	    -->>	(do not show same line)

# diff  <file1><file2>      -->>	(To show different between 2 files)

# diff -r <dir1><dir2> 	    -->>	(To show different between 2 directory)

# firefox                   -->>        (open the web browser)

# last                      -->> 	(to show login user & system reboot history)

# last tty2                 -->>	(to show tty2 user status)

# lastb                     -->>	(show the last logged in user)

# lastlog -u alex           -->>	(individual user log check)

# wall  "hi all"            -->>	(to send broadcast message)

# free               	    -->>	(To show RAM & swap status)

# vmstat              	    -->>	(To show virtual memory Status)

# lsmod               	    -->>	(To show list of modules)

# modinfo cdrom       	    -->>	(TO show info about module)

# modprobe cdrom      	    -->>	(To install the module)

# modprobe -r cdrom   	    -->>	(Uninstall module)

# dmidecode        	    -->>	(To show all hardware info)

# uptime  		    -->>	(show how long the system has been running)

# uname -a            	    -->>	(print system information)

# uname -r            	    -->>	(to show the kernel version)

# dd if=/dev/sr0 of=/mnt/data/file.iso  -->>	[to create iso file]

# dd if=/dev/sda of=/tmp/file1  -->>	[backup content of the hdd to a file]

# diff -r dir1 dir2        -->>         [different between two dir.]

# mkisofs -o /data/myiso.iso /test   -->>	[to create iso file of a folder contain]

# cdrecord -v dev=/dev/cdrom cd.iso  -->>	[burn an ISO image]

# ethtool eth0              -->>        [show status of eth0]

# smartctl -i /dev/sda      -->>        (to show HDD information)

# smartctl -H /dev/sda      -->>        (to show HDD health)

# look exer                 -->>	(to show lines beginning with a given word)

# sar -    		    -->>	(Collect, report, or save system activity information)

# lsblk -a       	    -->>	(list block devices)

# lscpu          	    -->>	(list CPU architecture information)

# lsusb          	    -->>	(list usb devices)

# ac             	    -->>	(print the user connect time (in hours))
 
# ac -p alex     	    -->>	(only alex user individual-totals)

# netstat  		    -->>	(Networking information such as install protocols and port no)

# namp 192.168.0.254 	    -->>	(Port Scanner(Nmap (Network Mapper) tool)

# yum install wireshark* -y -->>	(install pkg)

# wireshark        	    -->>	(Network monitoring tool)

# ss                        -->>	(ss is used to dump socket statistics)

# logger "welcome to skynet"     -->>   (log generate)

# osinfo                    -->>        (to show OS information)

# osinfo -h station1.example.com   -->> (remote info show) 
 
# smartctl -i /dev/sda

# smartctl -H /dev/sda

# smartctl -a /dev/sda

# dd if=/dev/sr0 of=/mnt/data/file.iso  -->>	[to create iso file]

# dd if=/dev/sda of=/tmp/file1   	-->>	[backup content of the HDD to a file]

# diff -r dir1 dir2                     -->>	[different between two dir]

# mkisofs -o /data/myiso.iso /test    	-->>	[to create iso file of a folder contain]

# ethtool eth0                          -->>	[show status of eth0]

# cdrecord -v dev=/dev/cdrom cd.iso     -->>	[burn an ISO image]

# dumpe2fs /dev/sda1                	-->>	[to show file-system information]

# stty -echo                            -->>	[hidden command]

# stty echo                             -->>	[show command]

# sed 's/unix/linux/' file.txt          -->>    (replace words)

# sed 's/unix/& kishor/' nasa.txt       -->>    (extra modify line)

# sed '1 s/unix/linux/' nasa.txt        -->>    (line numbers replace)

# sed '1,3 s/unix/linux/' nasa.txt      -->>    (1 to 3 line replace only)

# sed '1,$ s/unix/linux/' nasa.txt      -->>	(1st line to last line replace)

# sed '2 d' nasa.txt                    -->>    (2 no line delete)

# sed '2,3 d' nasa.txt                  -->>    (2 & 3 line delete)

# sed '3,$ d' nasa.txt                  -->>    (3 to last line delete)

# sed '/^$/d' nasa.txt        		-->>	(remove all blank lines from file)

# apropos ifco              		-->>	(search the whatis database for strings)

# wget -r www.google.com      		-->>	(download the web site)

# wget -c ftp://192.168.0.254/pub/ISOs/window7.iso  -->> (Download the file current directory)

# wget -c ftp://192.168.0.254/pub/ISOs/window7.iso -O/root/Download/window7.iso  	-->>	(Download file on /root/Download directory)
            
# users    		-->>	(show the user name of users currently logged in to the current host)

# logname               -->>	(Print current login name)

# vmstat                -->>    (To show virtual memory Status)

# watch <command-name>  -->>    (to watch command with full-screen)




***	IMP FILE
================

# vim /etc/motd  	-->>	[to store message of the day]

# vim /proc/meminfo  	-->>	[to store memory info]

# vim /proc/cpuinfo  	-->>	[to store CPU info]

# vim /etc/system-release     -->>	[to store OS info]

# vim  /etc/redhat-release    -->>      [to store OS info]

# vim /etc/services           -->>	[to store all port Number]

# vim /etc/issue        -->>	[pre-login message and identification file]



***	What is kernel?

-->>	Kernel is heart of Linux OS. It manages resource of Linux OS Resources mean
facilities available In Linux For e.g. Facility to store data, print data on
printer, memory manage, file management. Kernel decides who will use this resource for how long and when.


***	Kernel performance following task:
==========================================

1.I/O management

2. Process management

3. Device management

4. File management

5. Memory management


***  ##### Linux Special Permission ####
========================================

***	Apart from traditional file permissions in Linux, there are 3 types of special
permission.


1. Set User id (SUID) = only for command binaries


2. Set Group id (SGID) = for command directories


3. Sticky Bit = only for directory


***	SUID:- when a SUID bit is set on a command then that command always executes
with the User ID of its own user owner(who created it) instead of the user who
is executing it.


***	SGID:- when SGID permission is set on a directory, then all the new (future)
files created under that directory will have the same group owner as that of
the parent directory.


***	Sticky Bit:- The new files create under the directory having sticky bit on it
can be only deleted by root or the user who created that file. On other user can delete that file even if they have
write permission on the parent directory.



######## How many types of file in Linux/Unix..? ###########
============================================================
By default Unix/Linux have only 3 types of files..
============================================================

1. Regular file(-)

2. Directory files(d)

3. Special files:- (This category is having 5 sub types in it.)

a. Block file(b)

b. Character device file(c)

c. Named/pipe file(p)

d. Symbolic link file(l)

e. Socket file(s

----------------------------------------------------------------------------








